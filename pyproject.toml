[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hacktivity"
version = "0.1.0"
description = "Summarize your GitHub activity using the Gemini API"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Hacktivity Contributors"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Utilities",
]
dependencies = [
    "google-generativeai>=0.3.0",
    "click>=8.0",
    "python-dateutil>=2.8",
    "pydantic>=2.0",
    "diskcache>=5.0",
    "rich>=13.0",
    "tenacity>=8.0",
    "tomli>=2.0; python_version<'3.11'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
]

[project.scripts]
hacktivity = "hacktivity.__main__:main"

[project.urls]
"Homepage" = "https://github.com/yourusername/hacktivity"
"Bug Tracker" = "https://github.com/yourusername/hacktivity/issues"

[tool.setuptools]
package-dir = {"" = "."}
packages = ["hacktivity", "hacktivity.core", "hacktivity.prompts"]

[tool.setuptools.package-data]
hacktivity = ["prompts/*.md"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=hacktivity --cov-report=html --cov-report=term --cov-fail-under=90"

[tool.coverage.run]
source = ["hacktivity"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]